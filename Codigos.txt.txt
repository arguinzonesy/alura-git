GIT
1. Para iniciar, se entra en carpeta desde el codigo y se inicia GIT
$ git init
$ git status

2. Empezamos a monitorear index.html
$ git add idex.html
or $ git add . (esto es para todos los archivos de la carpeta)

Para dejar de monitorear se usa "git rm --cached <file>"

3. Verificamos la versi√≥n y el uso del commit
$ git config --global user.email "yang.arguinzones@gmail.com"
$ git config --global user.name "Yang" (--local cuando se aplique solo a ese proyecto)
$ git commit -m "Creando archivo index.html con lista de cursos"

4. Para ver los cambios realizados en el commit
$ git log
$ git log --online
$ git log -p
:q

5. Ignorando archivos, voy a ignorar este mismo por cierto
Se genera un archivo llamado .gitignore y dentro se coloca las carpetas o archivos a ignorar
$ git add .gitignore
$ git commit -m "Se agrega gitignore"

6. Se crea servidor remoto
Una carpeta fuera del original y se inicia como servidor git
$ git init --bare

7. Se ingresa nuevamente a la carpeta de GIT donde esta el codigo
$ git remote
$ git remote add servidorlocal C:/Users/NewYang/Desktop/Personal/ONE/servidor/

8. Nuevos usuarios, se crea la carpeta puede ser local o remota y para clonar el repositorio
$ git clone /c/Users/NewYang/Desktop/Personal/ONE/servidor/ proyecto
Antes de clonar hay que enviar sobre el repositorio remoto

9. Enviar proyecto a servidor remoto
$ git push servidorlocal master
Se entra al otro perfil y se mete a la info
$ git remote rename local servidorlocal

10. Se agrega el repositorio servidor local
$ git pull servidorlocal master

11. Para enviar al servidor
$ git push servidorlocal master

12. Para llamar los cambios
$ git pull servidorlocal master
$ git log -p
:q

13. Para colocarlo en servidor gratuito por GitHub
HTTPS
$ git remote add origin https://github.com/arguinzonesy/alura-git.git
$ git branch -M main ** No
$ git push -u origin main ** No
$ git push origin master (esta si)

14. Branches - Ramificaciones
$ git branch
$ git branch titulo
$ git checkout titulo







